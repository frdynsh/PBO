package Demonstrasi;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author FERDI YANSAH
 */
public class DriverMenu extends javax.swing.JFrame {
    private int userId;
    /**
     * Creates new form UserMenu
     */
    public DriverMenu(int userId) {
         this.userId = userId;
        initComponents();
        loadPesanan();
    }
    // Memuat data pesanan dari database yang terkait dengan driver
    private void loadPesanan() {
        DefaultTableModel model = new DefaultTableModel(
            new String[]{"ID Pesanan", "ID Customer", "ID Seller", "Nama Customer", "Nomor Telepon", "Alamat", "Status Pesanan"}, 0);

        try {
            Connection conn = dbConnection.getConnection();
            Statement stmt = conn.createStatement();
    
            // Query untuk mendapatkan data pesanan dan customer yang terkait dengan idDriver
            String query = "SELECT p.idPesanan, p.idCustomer, p.idSeller, c.nameFull, c.noHP, c.alamat, p.statusPesanan " +
                           "FROM pesanan p " +
                           "JOIN customer c ON p.idCustomer = c.id " +
                           "WHERE p.idDriver = '" + userId + "'";  // Filter berdasarkan idDriver yang sedang login

            ResultSet rs = stmt.executeQuery(query);

            // Loop untuk menambah data ke dalam tabel
            while (rs.next()) {
                String idPesanan = rs.getString("idPesanan");
                String idCustomer = rs.getString("idCustomer");
                String idSeller = rs.getString("idSeller");
                String nameFull = rs.getString("nameFull");
                String noHP = rs.getString("noHP");
                String alamat = rs.getString("alamat");
                String statusPesanan = rs.getString("statusPesanan");

                // Menambahkan baris data ke tabel
                model.addRow(new Object[]{idPesanan, idCustomer, idSeller, nameFull, noHP, alamat, statusPesanan});
            }

            // Menetapkan model ke jTable1
            jTable1.setModel(model);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal memuat data pesanan: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        antarBT = new javax.swing.JButton();
        exitBT = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 255, 153));

        jLabel1.setFont(new java.awt.Font("Snap ITC", 1, 24)); // NOI18N
        jLabel1.setText("GO DRY");

        jLabel2.setFont(new java.awt.Font("Snap ITC", 0, 14)); // NOI18N
        jLabel2.setText("DRIVER MENU");

        jTable1.setBackground(new java.awt.Color(153, 153, 0));
        jTable1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jTable1.setFont(new java.awt.Font("Segoe UI Semibold", 2, 12)); // NOI18N
        jTable1.setForeground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID Pesanan", "ID Seller", "ID Customer", "Nama", "Nomor Telepon", "Alamat", "Status"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        antarBT.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        antarBT.setText("Antar Pesanan");
        antarBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                antarBTActionPerformed(evt);
            }
        });

        exitBT.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        exitBT.setText("Exit");
        exitBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(101, 101, 101)
                            .addComponent(antarBT)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(exitBT))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 647, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 33, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(267, 267, 267)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(16, 16, 16)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exitBT)
                    .addComponent(antarBT))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void antarBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_antarBTActionPerformed
        // Cek apakah tabel memiliki data
        if (jTable1.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Tabel kosong, tidak ada data untuk diperbarui.");
            return;
        }

        // Ambil baris yang dipilih pada tabel
        int selectedRow = jTable1.getSelectedRow();

        if (selectedRow != -1) {
            // Ambil ID Pesanan dari baris yang dipilih
            String idPesanan = jTable1.getValueAt(selectedRow, 0).toString();

            // Set status baru langsung menjadi "Delivered"
            String newStatus = "Delivered";

            // Update data di database
            Connection conn = null;
            PreparedStatement pstmt = null;

            try {
                // Koneksi ke database
                conn = dbConnection.getConnection();

                // SQL query untuk update statusPesanan
                String query = "UPDATE pesanan SET statusPesanan = ? WHERE idPesanan = ?";

                // Prepare statement untuk mencegah SQL Injection
                pstmt = conn.prepareStatement(query);
                pstmt.setString(1, newStatus); // Set status baru menjadi "Delivered"
                pstmt.setString(2, idPesanan); // Set idPesanan yang dipilih

                // Eksekusi update
                int rowsUpdated = pstmt.executeUpdate();

                // Cek apakah update berhasil
                if (rowsUpdated > 0) {
                    JOptionPane.showMessageDialog(this, "Status Pesanan berhasil diperbarui!");
                    // Refresh data pesanan setelah pembaruan
                    loadPesanan();
                } else {
                    JOptionPane.showMessageDialog(this, "Gagal memperbarui status pesanan.");
                }

            } catch (Exception e) {
                // Jika terjadi error pada koneksi atau query
                JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
            } finally {
                try {
                    // Pastikan PreparedStatement ditutup
                    if (pstmt != null) {
                        pstmt.close();
                    }                  
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(this, "Error closing PreparedStatement: " + e.getMessage());
                }
            }
        } else {
            // Jika tidak ada baris yang dipilih
            JOptionPane.showMessageDialog(this, "Silakan pilih pesanan yang ingin diupdate.");
        }
    }//GEN-LAST:event_antarBTActionPerformed

    private void exitBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBTActionPerformed
        // TODO add your handling code here:
        new SignIn().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_exitBTActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DriverMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DriverMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DriverMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DriverMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>     
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DriverMenu(3001).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton antarBT;
    private javax.swing.JButton exitBT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
